// ==========
// LEFT_HAND
// ==========

// R3
COMB(WE_LCBR,            KC_LCBR,              KC_W, KC_E)
COMB(ER_RCBR,            KC_RCBR,              KC_E, KC_R)
SUBS(WR_CBR_PAIR,        "{}",                 KC_W, KC_R)
SUBS(WER_CBR_PAIR_IN,    "{}"SS_TAP(X_LEFT),   KC_W, KC_E, KC_R)
COMB(RT_PIPE,            KC_PIPE,              KC_R, KC_T)

// R2
COMB(SD_LPRN,            KC_LPRN,              KC_S, KC_D)
COMB(DF_RPRN,            KC_RPRN,              KC_D, KC_F)
SUBS(SF_PRN_PAIR,        "()",                 KC_S, KC_F)
SUBS(SDF_PRN_PAIR_IN,    "()"SS_TAP(X_LEFT),   KC_S, KC_D, KC_F)

// R1
COMB(XC_COPY,            LGUI(KC_C),           KC_X, KC_C)
COMB(CV_PASTE,           LGUI(KC_V),           KC_C, KC_V)
COMB(XV_CUT,             LGUI(KC_X),           KC_X, KC_V)
COMB(XCV_PASTE_SFT,      LGUI(S(KC_V)),        KC_X, KC_C, KC_V)
COMB(ZX_UNDO,            LGUI(KC_Z),           KC_Z, KC_X)

// ==========
// RIGHT_HAND
// ==========

// R3
COMB(YU_AMPR,            KC_AMPR,              KC_Y, KC_U)
COMB(UI_CAPS_WORD,       CAPS,                 KC_U, KC_I)
COMB(IO_SNAKE_WORD,      SNAKE,                KC_I, KC_O)
COMB(UIO_SNAKE_SCREAM,   SNK_SCM,              KC_U, KC_I, KC_O)

// R2
COMB(HJ_EQL,             KC_EQL,               KC_H, KC_J)
COMB(JK_ESC,             KC_ESC,               KC_J, KC_K)
COMB(KL_TAB,             KC_TAB,               KC_K, KC_L)
COMB(LSCLN_BSPC,         KC_BSPC,              KC_L, KC_SCLN)

// ==========
// SWE
// ==========

COMB(SWE_AO,             SE_AO,                KC_A, KC_O)
COMB(SWE_AE,             SE_AE,                KC_A, KC_E)
COMB(SWE_OE,             SE_OE,                KC_O, KC_E)

// vim:ft=c
