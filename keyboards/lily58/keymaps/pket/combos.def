// LEFT
COMB(WE_LCBR,         KC_LCBR,              KC_W, KC_E)
COMB(ER_RCBR,         KC_RCBR,              KC_E, KC_R)
SUBS(WR_CBR_PAIR,     "{}",                 KC_W, KC_R)
SUBS(WER_CBR_PAIR_IN, "{}"SS_TAP(X_LEFT),   KC_W, KC_E, KC_R)

COMB(SD_LPRN,         KC_LPRN,              KC_S, KC_D)
COMB(SD_RPRN,         KC_RPRN,              KC_D, KC_F)
SUBS(SF_PRN_PAIR,     "()",                 KC_S, KC_F)
SUBS(SDF_PRN_PAIR_IN, "()"SS_TAP(X_LEFT),   KC_S, KC_D, KC_F)

COMB(XC_COPY,         LGUI(KC_C),           KC_X, KC_C)
COMB(CV_PASTE,        LGUI(KC_V),           KC_C, KC_V)
COMB(XV_CUT,          LGUI(KC_X),           KC_X, KC_V)
COMB(XCV_SFT_PASTE,   LGUI(S(KC_V)),        KC_X, KC_V)
COMB(ZX_UNDO,         LGUI(KC_Z),           KC_Z, KC_X)

// RIGHT
COMB(UI_CAPS,         CAPS,                 KC_U, KC_I)
COMB(IO_SNAKE,        SNAKE,                KC_I, KC_O)
COMB(UIO_LOUD_SNAKE,  SNK_SCM,              KC_U, KC_I, KC_O)

COMB(JK_ESC,          KC_ESC,               KC_J, KC_K)
COMB(KL_TAB,          KC_TAB,               KC_K, KC_L)
COMB(LSCLN_TAB,       KC_BSPC,              KC_L, KC_SCLN)

// vim:ft=c

